{"version":3,"sources":["core/components/reconnection_manager.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;AAYE,wBAAuD;AAAA,QAAzC,YAAyC,QAAzC,YAAyC;;AAAA;;AACrD,SAAK,aAAL,GAAqB,YAArB;AACD;;;;mCAEc,oB,EAAgC;AAC7C,WAAK,qBAAL,GAA6B,oBAA7B;AACD;;;mCAEc;AACb,WAAK,UAAL,GAAkB,YAAY,KAAK,gBAAL,CAAsB,IAAtB,CAA2B,IAA3B,CAAZ,EAA8C,IAA9C,CAAlB;AACD;;;uCAEkB;AAAA;;AACjB,WAAK,aAAL,CAAmB,KAAnB,CAAyB,UAAC,MAAD,EAAgC;AACvD,YAAI,CAAC,OAAO,KAAZ,EAAmB;AACjB,wBAAc,MAAK,UAAnB;AACA,gBAAK,qBAAL;AACD;AACF,OALD;AAMD","file":"core/components/reconnection_manager.js","sourcesContent":["import TimeEndpoint from '../endpoints/time';\nimport { StatusAnnouncement } from '../flow_interfaces';\n\ntype ReconnectionManagerArgs = {\n  timeEndpoint: TimeEndpoint\n}\n\nexport default class {\n\n  _reconnectionCallback: Function;\n  _timeEndpoint: TimeEndpoint;\n  _timeTimer: number;\n\n  constructor({ timeEndpoint }: ReconnectionManagerArgs) {\n    this._timeEndpoint = timeEndpoint;\n  }\n\n  onReconnection(reconnectionCallback: Function) {\n    this._reconnectionCallback = reconnectionCallback;\n  }\n\n  startPolling() {\n    this._timeTimer = setInterval(this._performTimeLoop.bind(this), 3000);\n  }\n\n  _performTimeLoop() {\n    this._timeEndpoint.fetch((status: StatusAnnouncement) => {\n      if (!status.error) {\n        clearInterval(this._timeTimer);\n        this._reconnectionCallback();\n      }\n    });\n  }\n\n}\n"],"sourceRoot":"/source/"}