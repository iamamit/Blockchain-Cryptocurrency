{"version":3,"sources":["core/endpoints/presence/get_state.js"],"names":[],"mappings":";;;;;QAIgB,Y,GAAA,Y;QAIA,c,GAAA,c;QAMA,M,GAAA,M;QAOA,iB,GAAA,iB;QAIA,e,GAAA,e;QAIA,a,GAAA,a;QAWA,c,GAAA,c;;AAtChB;;AAEO,SAAS,YAAT,GAAgC;AACrC,SAAO,qBAAP;AACD;;AAEM,SAAS,cAAT,CAAwB,OAAxB,EAAgD;AAAA,MAC/C,MAD+C,GACpC,OADoC,CAC/C,MAD+C;;;AAGrD,MAAI,CAAC,OAAO,YAAZ,EAA0B,OAAO,uBAAP;AAC3B;;AAEM,SAAS,MAAT,CAAgB,OAAhB,EAAwC,cAAxC,EAAmF;AAAA,MAClF,MADkF,GACvE,OADuE,CAClF,MADkF;AAAA,6BAE5C,cAF4C,CAElF,IAFkF;AAAA,MAElF,IAFkF,wCAE3E,OAAO,IAFoE;AAAA,8BAE5C,cAF4C,CAE9D,QAF8D;AAAA,MAE9D,QAF8D,yCAEnD,EAFmD;;AAGxF,MAAI,sBAAsB,SAAS,MAAT,GAAkB,CAAlB,GAAsB,SAAS,IAAT,CAAc,GAAd,CAAtB,GAA2C,GAArE;AACA,SAAO,0BAA0B,OAAO,YAAjC,GAAgD,WAAhD,GAA8D,mBAA9D,GAAoF,QAApF,GAA+F,IAAtG;AACD;;AAEM,SAAS,iBAAT,OAAsD;AAAA,MAAzB,MAAyB,QAAzB,MAAyB;;AAC3D,SAAO,OAAO,qBAAP,EAAP;AACD;;AAEM,SAAS,eAAT,GAA2B;AAChC,SAAO,IAAP;AACD;;AAEM,SAAS,aAAT,CAAuB,OAAvB,EAA+C,cAA/C,EAA0F;AAAA,+BAClE,cADkE,CACzF,aADyF;AAAA,MACzF,aADyF,0CACzE,EADyE;;AAE/F,MAAM,SAAS,EAAf;;AAEA,MAAI,cAAc,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,WAAO,eAAP,IAA0B,mBAAmB,cAAc,IAAd,CAAmB,GAAnB,CAAnB,CAA1B;AACD;;AAED,SAAO,MAAP;AACD;;AAEM,SAAS,cAAT,CAAwB,OAAxB,EAAgD,cAAhD,EAAwE,cAAxE,EAA6H;AAAA,+BACtF,cADsF,CAC5H,QAD4H;AAAA,MAC5H,QAD4H,0CACjH,EADiH;AAAA,+BACtF,cADsF,CAC7G,aAD6G;AAAA,MAC7G,aAD6G,0CAC7F,EAD6F;;AAElI,MAAI,mBAAmB,EAAvB;;AAEA,MAAI,SAAS,MAAT,KAAoB,CAApB,IAAyB,cAAc,MAAd,KAAyB,CAAtD,EAAyD;AACvD,qBAAiB,SAAS,CAAT,CAAjB,IAAgC,eAAe,OAA/C;AACD,GAFD,MAEO;AACL,uBAAmB,eAAe,OAAlC;AACD;;AAED,SAAO,EAAE,UAAU,gBAAZ,EAAP;AACD","file":"core/endpoints/presence/get_state.js","sourcesContent":["/* @flow */\n\nimport { GetStateArguments, GetStateResponse, ModulesInject } from '../../flow_interfaces';\n\nexport function getOperation(): string {\n  return 'PNGetStateOperation';\n}\n\nexport function validateParams(modules: ModulesInject) {\n  let { config } = modules;\n\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n}\n\nexport function getURL(modules: ModulesInject, incomingParams: GetStateArguments): string {\n  let { config } = modules;\n  let { uuid = config.UUID, channels = [] } = incomingParams;\n  let stringifiedChannels = channels.length > 0 ? channels.join(',') : ',';\n  return '/v2/presence/sub-key/' + config.subscribeKey + '/channel/' + stringifiedChannels + '/uuid/' + uuid;\n}\n\nexport function getRequestTimeout({ config }: ModulesInject) {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported() {\n  return true;\n}\n\nexport function prepareParams(modules: ModulesInject, incomingParams: GetStateArguments): Object {\n  let { channelGroups = [] } = incomingParams;\n  const params = {};\n\n  if (channelGroups.length > 0) {\n    params['channel-group'] = encodeURIComponent(channelGroups.join(','));\n  }\n\n  return params;\n}\n\nexport function handleResponse(modules: ModulesInject, serverResponse: Object, incomingParams: GetStateArguments): GetStateResponse {\n  let { channels = [], channelGroups = [] } = incomingParams;\n  let channelsResponse = {};\n\n  if (channels.length === 1 && channelGroups.length === 0) {\n    channelsResponse[channels[0]] = serverResponse.payload;\n  } else {\n    channelsResponse = serverResponse.payload;\n  }\n\n  return { channels: channelsResponse };\n}\n"],"sourceRoot":"/source/"}