{"version":3,"sources":["core/endpoints/publish.js"],"names":[],"mappings":"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","file":"core/endpoints/publish.js","sourcesContent":["/* @flow */\n\nimport { PublishResponse, PublishArguments, ModulesInject } from '../flow_interfaces';\n\nfunction prepareMessagePayload(modules, messagePayload) {\n  const { crypto, config } = modules;\n  let stringifiedPayload = JSON.stringify(messagePayload);\n\n  if (config.cipherKey) {\n    stringifiedPayload = crypto.encrypt(stringifiedPayload);\n    stringifiedPayload = JSON.stringify(stringifiedPayload);\n  }\n\n  return stringifiedPayload;\n}\n\nexport function getOperation(): string {\n  return 'PNPublishOperation';\n}\n\nexport function validateParams({ config}: ModulesInject, incomingParams: PublishArguments) {\n  let { message, channel } = incomingParams;\n\n  if (!channel) return 'Missing Channel';\n  if (!message) return 'Missing Message';\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n}\n\nexport function usePost(modules: ModulesInject, incomingParams: PublishArguments) {\n  let { sendByPost = false } = incomingParams;\n  return sendByPost;\n}\n\nexport function getURL(modules: ModulesInject, incomingParams: PublishArguments): string {\n  const { config } = modules;\n  const { channel, message } = incomingParams;\n  let stringifiedPayload = prepareMessagePayload(modules, message);\n  return '/publish/' + config.publishKey + '/' + config.subscribeKey + '/0/' + encodeURIComponent(channel) + '/0/' + encodeURIComponent(stringifiedPayload);\n}\n\nexport function postURL(modules: ModulesInject, incomingParams: PublishArguments): string {\n  const { config } = modules;\n  const { channel } = incomingParams;\n  return '/publish/' + config.publishKey + '/' + config.subscribeKey + '/0/' + encodeURIComponent(channel) + '/0';\n}\n\nexport function getRequestTimeout({ config }: ModulesInject) {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported() {\n  return true;\n}\n\nexport function postPayload(modules: ModulesInject, incomingParams: PublishArguments): string {\n  const { message } = incomingParams;\n  return prepareMessagePayload(modules, message);\n}\n\nexport function prepareParams(modules: ModulesInject, incomingParams: PublishArguments): Object {\n  const { meta, replicate = true, storeInHistory } = incomingParams;\n  const params = {};\n\n  if (storeInHistory != null) {\n    if (storeInHistory) {\n      params.store = '1';\n    } else {\n      params.store = '0';\n    }\n  }\n\n  if (replicate === false) {\n    params.norep = 'true';\n  }\n\n  if (meta && typeof meta === 'object') {\n    params.meta = JSON.stringify(meta);\n  }\n\n  return params;\n}\n\nexport function handleResponse(modules: ModulesInject, serverResponse: Object): PublishResponse {\n  return { timetoken: serverResponse[2] };\n}\n"],"sourceRoot":"/source/"}