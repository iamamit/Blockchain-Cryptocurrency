{"version":3,"sources":["core/endpoints/channel_groups/remove_channels.js"],"names":[],"mappings":";;;;;QAIgB,Y,GAAA,Y;QAIA,c,GAAA,c;QASA,M,GAAA,M;QAMA,iB,GAAA,iB;QAIA,e,GAAA,e;QAIA,a,GAAA,a;QAQA,c,GAAA,c;;AArChB;;AAEO,SAAS,YAAT,GAAgC;AACrC,SAAO,oCAAP;AACD;;AAEM,SAAS,cAAT,CAAwB,OAAxB,EAAgD,cAAhD,EAAqF;AAAA,MACpF,QADoF,GACzD,cADyD,CACpF,QADoF;AAAA,MAC1E,YAD0E,GACzD,cADyD,CAC1E,YAD0E;AAAA,MAEpF,MAFoF,GAEzE,OAFyE,CAEpF,MAFoF;;;AAI1F,MAAI,CAAC,YAAL,EAAmB,OAAO,uBAAP;AACnB,MAAI,CAAC,QAAD,IAAa,SAAS,MAAT,KAAoB,CAArC,EAAwC,OAAO,kBAAP;AACxC,MAAI,CAAC,OAAO,YAAZ,EAA0B,OAAO,uBAAP;AAC3B;;AAEM,SAAS,MAAT,CAAgB,OAAhB,EAAwC,cAAxC,EAAqF;AAAA,MACpF,YADoF,GACnE,cADmE,CACpF,YADoF;AAAA,MAEpF,MAFoF,GAEzE,OAFyE,CAEpF,MAFoF;;AAG1F,SAAO,sCAAsC,OAAO,YAA7C,GAA4D,iBAA5D,GAAgF,YAAvF;AACD;;AAEM,SAAS,iBAAT,OAAsD;AAAA,MAAzB,MAAyB,QAAzB,MAAyB;;AAC3D,SAAO,OAAO,qBAAP,EAAP;AACD;;AAEM,SAAS,eAAT,GAA2B;AAChC,SAAO,IAAP;AACD;;AAEM,SAAS,aAAT,CAAuB,OAAvB,EAA+C,cAA/C,EAA4F;AAAA,8BACzE,cADyE,CAC3F,QAD2F;AAAA,MAC3F,QAD2F,yCAChF,EADgF;;;AAGjG,SAAO;AACL,YAAQ,SAAS,IAAT,CAAc,GAAd;AADH,GAAP;AAGD;;AAEM,SAAS,cAAT,GAAkC;AACvC,SAAO,EAAP;AACD","file":"core/endpoints/channel_groups/remove_channels.js","sourcesContent":["/* @flow */\n\nimport { RemoveChannelParams, ModulesInject } from '../../flow_interfaces';\n\nexport function getOperation(): string {\n  return 'PNRemoveChannelsFromGroupOperation';\n}\n\nexport function validateParams(modules: ModulesInject, incomingParams: RemoveChannelParams) {\n  let { channels, channelGroup } = incomingParams;\n  let { config } = modules;\n\n  if (!channelGroup) return 'Missing Channel Group';\n  if (!channels || channels.length === 0) return 'Missing Channels';\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n}\n\nexport function getURL(modules: ModulesInject, incomingParams: RemoveChannelParams): string {\n  let { channelGroup } = incomingParams;\n  let { config } = modules;\n  return '/v1/channel-registration/sub-key/' + config.subscribeKey + '/channel-group/' + channelGroup;\n}\n\nexport function getRequestTimeout({ config }: ModulesInject) {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported() {\n  return true;\n}\n\nexport function prepareParams(modules: ModulesInject, incomingParams: RemoveChannelParams): Object {\n  let { channels = [] } = incomingParams;\n\n  return {\n    remove: channels.join(',')\n  };\n}\n\nexport function handleResponse(): Object {\n  return {};\n}\n"],"sourceRoot":"/source/"}