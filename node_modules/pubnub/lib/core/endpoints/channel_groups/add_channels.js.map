{"version":3,"sources":["core/endpoints/channel_groups/add_channels.js"],"names":[],"mappings":";;;;;QAIgB,Y,GAAA,Y;QAIA,c,GAAA,c;QASA,M,GAAA,M;QAMA,iB,GAAA,iB;QAIA,e,GAAA,e;QAIA,a,GAAA,a;QAQA,c,GAAA,c;;AArChB;;AAEO,SAAS,YAAT,GAAgC;AACrC,SAAO,+BAAP;AACD;;AAEM,SAAS,cAAT,CAAwB,OAAxB,EAAgD,cAAhD,EAAkF;AAAA,MACjF,QADiF,GACtD,cADsD,CACjF,QADiF;AAAA,MACvE,YADuE,GACtD,cADsD,CACvE,YADuE;AAAA,MAEjF,MAFiF,GAEtE,OAFsE,CAEjF,MAFiF;;;AAIvF,MAAI,CAAC,YAAL,EAAmB,OAAO,uBAAP;AACnB,MAAI,CAAC,QAAD,IAAa,SAAS,MAAT,KAAoB,CAArC,EAAwC,OAAO,kBAAP;AACxC,MAAI,CAAC,OAAO,YAAZ,EAA0B,OAAO,uBAAP;AAC3B;;AAEM,SAAS,MAAT,CAAgB,OAAhB,EAAwC,cAAxC,EAAkF;AAAA,MACjF,YADiF,GAChE,cADgE,CACjF,YADiF;AAAA,MAEjF,MAFiF,GAEtE,OAFsE,CAEjF,MAFiF;;AAGvF,SAAO,sCAAsC,OAAO,YAA7C,GAA4D,iBAA5D,GAAgF,YAAvF;AACD;;AAEM,SAAS,iBAAT,OAA8D;AAAA,MAAjC,MAAiC,QAAjC,MAAiC;;AACnE,SAAO,OAAO,qBAAP,EAAP;AACD;;AAEM,SAAS,eAAT,GAAoC;AACzC,SAAO,IAAP;AACD;;AAEM,SAAS,aAAT,CAAuB,OAAvB,EAA+C,cAA/C,EAAyF;AAAA,8BACtE,cADsE,CACxF,QADwF;AAAA,MACxF,QADwF,yCAC7E,EAD6E;;;AAG9F,SAAO;AACL,SAAK,SAAS,IAAT,CAAc,GAAd;AADA,GAAP;AAGD;;AAEM,SAAS,cAAT,GAAkC;AACvC,SAAO,EAAP;AACD","file":"core/endpoints/channel_groups/add_channels.js","sourcesContent":["/* @flow */\n\nimport { AddChannelParams, ModulesInject } from '../../flow_interfaces';\n\nexport function getOperation(): string {\n  return 'PNAddChannelsToGroupOperation';\n}\n\nexport function validateParams(modules: ModulesInject, incomingParams: AddChannelParams) {\n  let { channels, channelGroup } = incomingParams;\n  let { config } = modules;\n\n  if (!channelGroup) return 'Missing Channel Group';\n  if (!channels || channels.length === 0) return 'Missing Channels';\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n}\n\nexport function getURL(modules: ModulesInject, incomingParams: AddChannelParams): string {\n  let { channelGroup } = incomingParams;\n  let { config } = modules;\n  return '/v1/channel-registration/sub-key/' + config.subscribeKey + '/channel-group/' + channelGroup;\n}\n\nexport function getRequestTimeout({ config }: ModulesInject): number {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported(): boolean {\n  return true;\n}\n\nexport function prepareParams(modules: ModulesInject, incomingParams: AddChannelParams): Object {\n  let { channels = [] } = incomingParams;\n\n  return {\n    add: channels.join(',')\n  };\n}\n\nexport function handleResponse(): Object {\n  return {};\n}\n"],"sourceRoot":"/source/"}