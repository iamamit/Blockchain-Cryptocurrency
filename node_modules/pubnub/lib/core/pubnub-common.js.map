{"version":3,"sources":["core/pubnub-common.js"],"names":[],"mappings":"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","file":"core/pubnub-common.js","sourcesContent":["/* @flow */\n\nimport Networking from './components/networking';\nimport Config from './components/config';\nimport Crypto from './components/cryptography/index';\nimport SubscriptionManager from './components/subscription_manager';\nimport ListenerManager from './components/listener_manager';\n\nimport endpointCreator from './components/endpoint';\n\nimport * as addChannelsChannelGroupConfig from './endpoints/channel_groups/add_channels';\nimport * as removeChannelsChannelGroupConfig from './endpoints/channel_groups/remove_channels';\nimport * as deleteChannelGroupConfig from './endpoints/channel_groups/delete_group';\nimport * as listChannelGroupsConfig from './endpoints/channel_groups/list_groups';\nimport * as listChannelsInChannelGroupConfig from './endpoints/channel_groups/list_channels';\n\nimport * as addPushChannelsConfig from './endpoints/push/add_push_channels';\nimport * as removePushChannelsConfig from './endpoints/push/remove_push_channels';\nimport * as listPushChannelsConfig from './endpoints/push/list_push_channels';\nimport * as removeDevicePushConfig from './endpoints/push/remove_device';\n\nimport * as presenceLeaveEndpointConfig from './endpoints/presence/leave';\nimport * as presenceWhereNowEndpointConfig from './endpoints/presence/where_now';\nimport * as presenceHeartbeatEndpointConfig from './endpoints/presence/heartbeat';\nimport * as presenceGetStateConfig from './endpoints/presence/get_state';\nimport * as presenceSetStateConfig from './endpoints/presence/set_state';\nimport * as presenceHereNowConfig from './endpoints/presence/here_now';\n\nimport * as auditEndpointConfig from './endpoints/access_manager/audit';\nimport * as grantEndpointConfig from './endpoints/access_manager/grant';\n\nimport * as publishEndpointConfig from './endpoints/publish';\nimport * as historyEndpointConfig from './endpoints/history';\nimport * as timeEndpointConfig from './endpoints/time';\nimport * as subscribeEndpointConfig from './endpoints/subscribe';\n\nimport packageJSON from '../../package.json';\n\nimport { InternalSetupStruct } from './flow_interfaces';\n\nexport default class {\n\n  _config: Config;\n\n  // tell flow about the mounted endpoint\n  time: Function;\n  publish: Function;\n  fire: Function;\n  history: Function;\n  //\n  channelGroups: Object;\n  //\n  push: Object;\n  //\n  hereNow: Function;\n  whereNow: Function;\n  getState: Function;\n  setState: Function;\n  //\n  grant: Function;\n  audit: Function;\n  //\n  subscribe: Function;\n  unsubscribe: Function;\n  reconnect: Function;\n  stop: Function;\n\n  addListener: Function;\n  removeListener: Function;\n\n  getAuthKey: Function;\n  setAuthKey: Function;\n\n  setCipherKey: Function;\n  setUUID: Function;\n  getUUID: Function;\n\n  getFilterExpression: Function;\n  setFilterExpression: Function;\n\n  //\n\n  constructor(setup: InternalSetupStruct) {\n    let { sendBeacon, db } = setup;\n\n    const config = this._config = new Config({ setup, db });\n    const crypto = new Crypto({ config });\n    const networking = new Networking({ config, crypto, sendBeacon });\n\n    let modules = { config, networking, crypto };\n    const listenerManager = new ListenerManager();\n\n    // new\n    const timeEndpoint = endpointCreator.bind(this, modules, timeEndpointConfig);\n    const leaveEndpoint = endpointCreator.bind(this, modules, presenceLeaveEndpointConfig);\n    const heartbeatEndpoint = endpointCreator.bind(this, modules, presenceHeartbeatEndpointConfig);\n    const setStateEndpoint = endpointCreator.bind(this, modules, presenceSetStateConfig);\n    const subscribeEndpoint = endpointCreator.bind(this, modules, subscribeEndpointConfig);\n    //\n\n    const subscriptionManager = new SubscriptionManager({\n      timeEndpoint,\n      leaveEndpoint, heartbeatEndpoint, setStateEndpoint,\n      subscribeEndpoint,\n      config: modules.config,\n      listenerManager,\n    });\n\n    this.addListener = listenerManager.addListener.bind(listenerManager);\n    this.removeListener = listenerManager.removeListener.bind(listenerManager);\n\n    /** channel groups **/\n    this.channelGroups = {\n      listGroups: endpointCreator.bind(this, modules, listChannelGroupsConfig),\n      listChannels: endpointCreator.bind(this, modules, listChannelsInChannelGroupConfig),\n      addChannels: endpointCreator.bind(this, modules, addChannelsChannelGroupConfig),\n      removeChannels: endpointCreator.bind(this, modules, removeChannelsChannelGroupConfig),\n      deleteGroup: endpointCreator.bind(this, modules, deleteChannelGroupConfig)\n    };\n    /** push **/\n    this.push = {\n      addChannels: endpointCreator.bind(this, modules, addPushChannelsConfig),\n      removeChannels: endpointCreator.bind(this, modules, removePushChannelsConfig),\n      deleteDevice: endpointCreator.bind(this, modules, removeDevicePushConfig),\n      listChannels: endpointCreator.bind(this, modules, listPushChannelsConfig)\n    };\n    /** presence **/\n    this.hereNow = endpointCreator.bind(this, modules, presenceHereNowConfig);\n    this.whereNow = endpointCreator.bind(this, modules, presenceWhereNowEndpointConfig);\n    this.getState = endpointCreator.bind(this, modules, presenceGetStateConfig);\n    this.setState = subscriptionManager.adaptStateChange.bind(subscriptionManager);\n    /** PAM **/\n    this.grant = endpointCreator.bind(this, modules, grantEndpointConfig);\n    this.audit = endpointCreator.bind(this, modules, auditEndpointConfig);\n    //\n    this.publish = endpointCreator.bind(this, modules, publishEndpointConfig);\n\n    this.fire = (args, callback) => {\n      args.replicate = false;\n      args.storeInHistory = false;\n      this.publish(args, callback);\n    };\n\n    this.history = endpointCreator.bind(this, modules, historyEndpointConfig);\n\n    this.time = timeEndpoint;\n\n    // subscription related methods\n    this.subscribe = subscriptionManager.adaptSubscribeChange.bind(subscriptionManager);\n    this.unsubscribe = subscriptionManager.adaptUnsubscribeChange.bind(subscriptionManager);\n    this.reconnect = subscriptionManager.reconnect.bind(subscriptionManager);\n    this.stop = subscriptionManager.disconnect.bind(subscriptionManager);\n\n    /** config **/\n    this.getAuthKey = modules.config.getAuthKey.bind(modules.config);\n    this.setAuthKey = modules.config.setAuthKey.bind(modules.config);\n    this.setCipherKey = modules.config.setCipherKey.bind(modules.config);\n    this.getUUID = modules.config.getUUID.bind(modules.config);\n    this.setUUID = modules.config.setUUID.bind(modules.config);\n    this.getFilterExpression = modules.config.getFilterExpression.bind(modules.config);\n    this.setFilterExpression = modules.config.setFilterExpression.bind(modules.config);\n  }\n\n\n  getVersion(): String { return packageJSON.version; }\n\n}\n"],"sourceRoot":"/source/"}